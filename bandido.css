/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * Bandido implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * bandido.css
 *
 * Bandido stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (bandido_bandido.tpl), and to HTML elements you create dynamically
    (in bandido.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


.row {
    display: flex;
	width: 98%;
	min-width: 800px;
    height: 200px;
    text-align: center;
    vertical-align:top;
}

.playerhand {
	min-width: 800px;
}

.deck {
    margin-right: 10px;
    width: 200px;
    height: 100px;
    background-image: url('img/cards.jpg'); 
    background-position: 0% -6900%;
}

.cardontable {
    position: absolute;
    width: 200px;
    height: 100px;
    background-image: url('img/cards.jpg'); 
}

.possiblemove {
    position: absolute;
    width: 200px;
    height: 100px;
    background-color: white;
    opacity: 0.5; 
}

/** Begin arrow classes */
.manipulation-arrow {
    background-color: white
}

.manipulation-arrow.rotate-left {
    transform: scaleX(-1); /* transform: rotate(180deg); */
    right: 100px;
}

.manipulation-arrow.rotate-left.anticlockwise {
    transform: none;
}

.manipulation-arrow.reverse {
    transform: rotate(45deg);
}

.manipulation-arrow.rotate-right {
    transform: scaleX(-1);
    left: 100px;
}

.manipulation-arrow.rotate-right.anticlockwise {
    transform: none; /* transform: rotate(180deg); */
}
/** End arrow classes */

/** Begin Scrollmap classes **/
#map_container {
    position: relative;
    width: 100%;
    height: 400px;
    overflow: hidden;
}
#map_scrollable, #map_scrollable_oversurface {
    position: absolute;
    top: 205px;
    left:  315px;
}
#map_surface {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    cursor: move;
}
#map_footer {
    text-align: center;
}

#movetop,#moveleft,#moveright,#movedown {
    display: block;
    position: absolute;
    background-image: url('../../../img/common/arrows.png');
    width: 32px;
    height: 32px;
}

#movetop {
    top: 0px;
    left: 50%;
    background-position: 0px 32px;
}
#moveleft {
    top: 50%;
    left: 0px;
    background-position: 32px 0px;
}
#moveright {
    top: 50%;
    right: 0px;
    background-position: 0px 0px;
}
#movedown {
    bottom: 0px;
    left: 50%;
    background-position: 32px 32px;
}
/** End Scrollmap classes **/

